location.replace(location.href);

ondragstart="return false"   禁止鼠标在网页上拖动

ondragenter 当用户拖曳对象到一个合法拖曳目标时在目标元素上触发

onpaste="return false" 禁止粘贴


移动端注意点：
	1.最佳viewport设置 <meta name="viewport" content="width=device-width initial-scale=1,user-scalable=no">
	2.1px素边框问题？根本原因:1px使用2dp渲染
	解决方案：:before{
		  position:absolute;
		  top:-1px;
		  left:0px;
		  content:" ";
		  width:100%;
		  height:1px;
		  border-top:1px solid #ddd;
		  -webkit-transform:scaleY(0.5);
		}
	3.移动web页面上的click事件响应都要慢上300ms，解决：用自定义的tap事件代替 click事件（Zepto.js）
	4.文本溢出
		a)单文本溢出：{overflow:hidden;white-space:nowrap;text-overflow:ellipsis;}
		b)多文本溢出：{display:-webkit-box!important;overflow:hidden;text-overflow:ellipsis;word-break:break-all;
	-webkit-box-orient:vertival;-webkit-line-clamp:3}
	5.局部滚动开启弹性滚动：overflow:scroll;-webkit-overflow-scrolling:touch;注：Android不支持原生的弹性滚动，但可以借助第三方
	库iScroll来实现。


有时候，需要通过模拟用户操作，来达到单击的效果。例如在用户进入页面后，就触发click事件，而不需要用户去主动单击。

在JQuery中，可以使用trigger()方法完成模拟操作。例如可以使用下面的代码来触发id为btn的按钮的click事件。

	&:$('#btn').trigger("click");